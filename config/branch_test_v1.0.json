{
    "agent": {
        "layers": [
            "# These layers should describe all but the input and output layers. Those are handled by the system.",
            "# Reduce incoming 6D tensor to 5D by merging channels (dim 1) and one-hot (dim 5):",
            "keras.layers.Permute((2, 3, 4, 1, 5))",
            "keras.layers.Reshape(({observation_width}, {observation_height}, {observation_width}, 2*{num_inputs}))",
            "# Convolve each input, treating the blueprint and world state as separate channels",
            "keras.layers.Conv3D(32, (3, 2, 3), padding='valid', data_format='channels_last', activation='elu')",
            "keras.layers.Conv3D(64, (3, 1, 3), padding='valid', data_format='channels_last', activation='elu')",
            "# Flatten, ready for fully-connected layers:",
            "keras.layers.Flatten()",
            "# Do some thinking:",
            [
              "# This splits the model into two branches:",
              [
                "# This is the value branch:",
                "keras.layers.Dense(32, activation='elu', name='fully-connected_1')",
                "keras.layers.Dense(1, activation='linear', name='value')"
              ],
              [
                "# This is the advantage branch:",
                "keras.layers.Dense(32, activation='elu', name='fully-connected_2')",
                "keras.layers.Dense({num_actions}, activation='linear', name='advantage')"
              ],
              "# This merges the model:",
              "M:keras.layers.Lambda(lambda x: x[1]-K.mean(x[1])+x[0], ({num_actions},), name='policy')"
            ]
        ],
        "target_update":5,
        "auto_final_layer": false,
        "use_full_observation": false,
        "observation_width": 7,
        "observation_height": 3,
        "obs_edge_type": "edge",
        "non_sequnetial": true,
        "reload_at_checkpoint": false
    },
    "training": {
        "num_episodes": 500,
        "save_frequency": 50,
        "max_episode_time": 20,
        "initial_epsilon": 0.8,
        "final_epsilon": 0.005,
        "overclock_factor": 5,
        "save_history": false,
        "train_on_history": false,
        "history": {
            "batch_size": 512,
            "batches": 32,
            "epochs": 32
        },
        "reward_weight": {
            "base": -0.01,
            "distance": 0.005,
            "facing_incomplete": 0.005,
            "place_necessary": 2,
            "place_superfluous": -0.1,
            "attack_floor": -0.5,
            "leave_arena": -1,
            "mission_complete": 5
        }
    },
    "curriculum": {
        "observation_period": 15,
        "max_lesson_length": 100,
        "lessons": [
          {
              "name": "lessonMB",
              "params": {
                  "n_blocks": 10,
                  "k": 1,
                  "target_reward": 7.0
              },
              "max_episodes": 8000,
              "max_episode_time": 10,
              "set_learning_schedule": true
          },
          {
                "name": "lessonMB",
                "params": {
                    "n_blocks": 7,
                    "organized":"random",
                    "k": 4,
                    "target_reward": 10.0
                },
                "max_episodes": 8000,
                "max_episode_time": 10,
                "set_learning_schedule": true
            },
            {
                "name": "lessonMB",
                "params": {
                    "n_blocks": 7,
                    "organized":"random",
                    "k": 3,
                    "tower":true,
                    "max_height":3,
                    "target_reward": 20.0
                },
                "max_episodes": 8000,
                "max_episode_time": 15,
                "set_learning_schedule": true
            },
            {
                "name": "full",
                "params": {
                    "length_margin": 1,
                    "width_margin": 1,
                    "height_margin": 6,
                    "block_weight": 0.5,
                    "buffer_factor": 0.8
                },
                "max_episodes": 4000,
                "max_episode_time": 30,
                "set_learning_schedule": true
            },
            {
                "name": "full",
                "params": {
                    "length_margin": 1,
                    "width_margin": 1,
                    "height_margin": 3,
                    "block_weight": 0.5,
                    "buffer_factor": 0.8
                },
                "max_episodes": 4000,
                "max_episode_time": 60,
                "set_learning_schedule": true
            }
        ]
    },
    "arena": {
        "width": 10,
        "height": 5,
        "length": 10,
        "anchor": {
            "x": 0,
            "y": 5,
            "z": 0
        },
        "offset": {
            "x": 0.5,
            "y": 0,
            "z": 0.5
        }
    },
    "inputs": ["air", "stone", "edge"],
    "actions": ["jumpmove 1", "turn 1", "turn -1", "use", "attack"]
}
