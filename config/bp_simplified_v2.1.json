{
    "agent": {
        "layers": [
            "# These layers should describe all but the input and output layers. Those are handled by the system.",
            "# Reduce incoming 6D tensor to 5D by merging channels (dim 1) and one-hot (dim 5):",
            "keras.layers.Permute((1, 5, 2, 3, 4))",
            "keras.layers.Reshape((-1, *BLUEPRINT.shape))",
            "# Convolve each input, treating the blueprint and world state as separate channels",
            "keras.layers.Conv3D(8, (3, 3, 3), padding='same', data_format='channels_first', activation='relu')",
            "keras.layers.Conv3D(8, (3, 3, 3), padding='same', data_format='channels_first', activation='relu')",
            "# max-pool features together a bit:",
            "keras.layers.MaxPooling3D(pool_size=BLUEPRINT.shape, data_format='channels_first')",
            "# Flatten, ready for fully-connected layers:",
            "keras.layers.Flatten()",
            "# Do some thinking:",
            "keras.layers.Dense(16, activation='relu')"
        ]
    },
    "training": {
        "num_episodes": 50000,
        "max_episode_time": 20,
        "initial_epsilon": 0.5,
        "final_epsilon": 0.01,
        "overclock_factor": 5,
        "save_history": true,
        "train_on_history": true,
        "history": {
            "batch_size": 512,
            "batches": 32,
            "epochs": 32
        },
        "reward_weight": {
            "base": -0.015,
            "distance": 0.01,
            "facing_incomplete": 0.01,
            "place_necessary": 0.5,
            "place_superfluous": -0.5,
            "attack_floor": -1,
            "leave_arena": -1,
            "mission_complete": 1
        }
    },
    "arena": {
        "width": 9,
        "height": 1,
        "length": 9,
        "anchor": {
            "x": 0,
            "y": 5,
            "z": 0
        },
        "offset": {
            "x": 0.5,
            "y": 0,
            "z": 0.5
        }
    },
    "inputs": ["air", "stone", "agent"],
    "actions": ["jumpmove 1", "turn 1", "turn -1", "use", "attack"]
}